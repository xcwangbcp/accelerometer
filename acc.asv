%step 0 load in the related data files
clear
train='true';
catalldata(train)

clear;close all 
%  load data
[f1,d1] = uigetfile('*.mat','Select Accelerometer Data MAT File:');load([d1,f1]);
[f2,d2] = uigetfile('*.mat','Select Accelerometer Data MAT File:');load([d2,f2]);
% load('F:\Data\accData\120E-data_1.mat');
% load('F:\Data\accData\120E-ta_data.mat');
clear   data_ba data_adc clock_hour dt_ba dt_adc  dt_xl
rawAcc  = dataT_xl(:,1:3);
tAcc    = info_xl.dateTime;
t1      = info_xl.dateTime(1); 
t2      = info_xl.dateTime(end)+seconds(3);
if length(rawAcc)==length(tAcc)*40
    disp('the data is ok for continue analysis')
else
    disp('check the raw data')
    return;
end
clear data_xl dataT_xl  info_xl
% 原始的time中有很多错误，只取第一行数据，后边是每一行人工加了1秒钟,make a timeline

tAcc    = t1:seconds(1):t2;
tAcc    = tAcc';

% set TOI 设置感兴趣的时间，Y/M/D/H/M/S
tSta   = [2021 4 13 18  0 0]; datetSta = datetime(tSta);
tEnd   = [2021 4 13 19  0 0]; datetEnd = datetime(tEnd);
cut    = datefind([datetSta datetEnd], tAcc);
tspan  = tEnd-tSta;
tspan  = tspan(3)*24*60*60+tspan(4)*60*60+tspan(5)*60+tspan(6);%以秒为单位
tpart  = tAcc(cut(1):cut(2));
partAcc= rawAcc((cut(1)-1)*10+1:(cut(2)-1)*10,:);% 采样率为10HZ
staticAcc =zeros(length(partAcc),3);
for i=1:3
    if i<4
        partAcc(:,i)  = partAcc(:,i)/512;
        staticAcc(:,i)= smooth(partAcc(:,i),30);% 3 second
    else
        staticAcc(:,i)=partAcc(:,i);
    end
end
dynamicAcc = partAcc-staticAcc;

% tm=length(partAcc)/600;% in minutes
figure
subplot 311
plot(partAcc(:,1),'r');hold on;grid on
plot(partAcc(:,2),'g');
plot(partAcc(:,3),'b');
title('Raw ACC');

subplot 312
plot(staticAcc(:,1),'r');hold on;grid on
plot(staticAcc(:,2),'g');
plot(staticAcc(:,3),'b');
title('Static Acc')

subplot 313
plot(dynamicAcc(:,1),'r');hold on;grid on
plot(dynamicAcc(:,2),'g');
plot(dynamicAcc(:,3),'b');
title('Dynamic Acc')

% set all the parameters for svm
N=length(partAcc);
veDBA = zeros(N,1);
normStatic=zeros(N,1);
pitch = zeros(N,1);
roll  = zeros(N,1);
yaw   = zeros(N,1);  
for i=1:N
    veDBA(i) = norm(dynamicAcc(i,1:3));
    normStatic(i)=norm(staticAcc(i,1:3));
    pitch(i) = asind(staticAcc(i,1)/normStatic(i));
    roll(i)  = asind(staticAcc(i,2)/normStatic(i));
    yaw(i)   = asind(staticAcc(i,3)/normStatic(i));
end 
veDBAs       = smooth(veDBA,30);
pDBA         = abs(dynamicAcc(:,1:3));
ratioDBA     = pDBA./veDBA;
% downsample to 1HZ
fs           = 10;




% split the data into 3 seconds
% segementDynaAcc=zeros(N/fs-2,3);
PSD1          = nan(N/fs,3);
freq1         = nan(N/fs,3);
PSD2          = nan(N/fs,3);
freq2         = nan(N/fs,3);
for  j=1:N/fs-2
    segementDynaAcc=dynamicAcc((j-1)*10+1:(j+2)*10,1:3);
    M            =length(segementDynaAcc);
    segementDynaAcc(isnan(segementDynaAcc))=0;
    t            = 0.1:1/fs:M/10;% in seconds
    freq         = 0:fs/M:fs/2;
    fft_accx     = fft(segementDynaAcc(:,1));
    fft_accx     = fft_accx(1:M/2+1);

    fft_accy     = fft(segementDynaAcc(:,2));
    fft_accy     = fft_accy(1:M/2+1);

    fft_accz     = fft(segementDynaAcc(:,3));
    fft_accz     = fft_accz(1:M/2+1);

    psdx         = (1/(fs*N))*abs(fft_accx).^2;
    psdx(2:end-1)= 2*psdx(2:end-1);
    psdx_sort    = sort(psdx,'descend');
    PSD1(j,1)    = max(psdx);
    if isempty(PSD1(j,1))|PSD1(j,1)==0
        continue;
    end
    freq1(j,1)   = freq((psdx==max(psdx)));
    PSD2(j,1)    = psdx_sort(2);
    temp         = find(psdx==PSD2(j,1));
    freq2(j,1)   = freq(temp(1));
    


    psdy         = (1/(fs*N))*abs(fft_accy).^2;
    psdy(2:end-1)= 2*psdy(2:end-1);
    psdy_sort    = sort(psdy,'descend');
    PSD1(j,2)    = max(psdy);
    if isempty(PSD1(j,2))|PSD1(j,2)==0
        continue;
    end
    freq1(j,2)   = freq(psdy==max(psdy));
    PSD2(j,2)    = psdy_sort(2);
    temp         = find(psdy==PSD2(j,2));
    freq2(j,2)   = freq(temp(1));


    psdz         = (1/(fs*N))*abs(fft_accz).^2;
    psdz(2:end-1)= 2*psdz(2:end-1);
    psdz_sort    = sort(psdz,'descend');
    PSD1(j,3)    = max(psdz);
    if isempty(PSD1(j,3))|PSD1(j,3)==0
        continue;
    end
    freq1(j,3)   = freq(psdz==max(psdz));
    PSD2(j,3)    = psdz_sort(2);
    temp         = find(psdz==PSD2(j,3));
    freq2(j,3)   = freq(temp(1));
   
end
monkeyID={'120A','120B','120C','120D','120E','120F','1209','1211','1212','1213','1214','1215'};

switch f1(1:4)
    case {'1209','1215','120D'}
        PDtype='control';
    case {'1214','120A','120B'}
        PDtype='nose';
    case {'1212','1211','120E'}
        PDtype='gas';
    case {'120C','120F','1213'}
        PDtype='stri';
end
PDtype=repmat(PDtype,N/fs,1);

varNames = {'staticAcc','dynamicAcc','veDBA','veDBAs', 'pitch','roll',...
    'pDBAx','pDBAy','pDBAz','ratioDBAx','ratioDBAy','ratioDBAz'...
   ,'PSD1x','PSD1y','PSD1z','freq1x','freq1y','freq1z','PSD2x',...
   'PSD2y','PSD2z','freq2x','freq2y','freq2z','PDtype'};
% averages = arrayfun(@(i) mean(staticAcc((i-1)*10 + 1:i*10)), 1:ceil(length(staticAcc)/10));
metrix=[staticAcc dynamicAcc veDBA veDBAs pitch roll pDBA ratioDBA];
[~,colum]=size(metrix);
newMetrics=zeros(N/fs,colum);
for k=1:fs:N
    newMetrics((k-1)/fs+1,:)=mean(metrix(k:k+9,:));
end
staticAcc  = newMetrics(:,1:3);
dynamicAcc = newMetrics(:,4:6);
veDBA      = newMetrics(:,7);
veDBAs     = newMetrics(:,8);
pitch      = newMetrics(:,9);
roll       = newMetrics(:,10);
pDBA       = newMetrics(:,11:13);
ratioDBA   = newMetrics(:,14:16);

T = table(staticAcc,dynamicAcc,veDBA,veDBAs,pitch,roll,pDBA,ratioDBA,PSD1,freq1,PSD2,freq2,PDtype);
% t= [staticAcc,dynamicAcc,veDBA,veDBAs,pitch,roll,pDBA,ratioDBA,PSD1,freq1,PSD2,freq2,PDtype];
filename_mat= [d1 'saveAccData\' f1(1:4) '.mat'];
save(filename_mat,"T")



function catalldata( train)
list=ls;list=list(3:end,:);l=length(list);
data=[];
type = {};
for j=1:l
    name=list(j,:);
    monkeyAcc=load(list(j,:));
    % [r,c]=size(monkeyAcc.T)
    tmp1=table2array(monkeyAcc.T(:,1:end-1));
    tmp2=table2cell(monkeyAcc.T(:,end));
    type=[type;tmp2];
    data=[data;tmp1];
    [rt,ct]=size(data);
end
% [rt,ct]=size(data);

staticAcc=data(:,1:3);dynamicAcc=data(:,4:6);veDBA=data(:,7);veDBAs=data(:,8);
pitch=data(:,9);roll=data(:,10);pDBA=data(:,11:13);ratioDBA=data(:,14:16);
PSD1=data(:,17:19);freq1=data(:,20:22);PSD2=data(:,23:25);freq2=data(:,26:28);
if train == 1
    PDtype=type;
    C= table(staticAcc,dynamicAcc,veDBA,veDBAs,pitch,roll,pDBA,ratioDBA,PSD1,freq1,PSD2,freq2,PDtype);
else
    C= table(staticAcc,dynamicAcc,veDBA,veDBAs,pitch,roll,pDBA,ratioDBA,PSD1,freq1,PSD2,freq2);
end
save('alldata',"C")
end
% get the original time sequence from the dt_xl,and put the empty time with


% % 'F:\Data\accData\saveData\120E—segment.mat';
% save(filename_mat,"segementData")
% %acc_x = zipAccData(:,1);acc_y = zipAccData(:,2);acc_z = zipAccData(:,3);
% % save the time and acc data into a file
% filename_csv = [d1 'saveAccData\' f1(1:4) '—.csv'];
% %'F:\Data\accData\saveData\120E.csv';
% % Nline=193681;mymatrix = table(time(1:Nline),acc_x(1:Nline),acc_y(1:Nline),acc_z(1:Nline));
% % mymatrix = table(time_text(1:end),zipAccData(:,1),zipAccData(:,2),zipAccData(:,3),zipAccData(:,4));
% % writetable(mymatrix,filename_csv);
% % xlswrite(mymatrix,filename)


% ss=cell(225890,1);
% for i=1:225891
%     if i<225891
%         s=between(datetime(dt_xl(i,:)),datetime(dt_xl(i+1,:)),'Time');
%         ss{i}=string(s);% 原时间数据会有6%的错误，相邻两个时间的秒数差不等于4，常发生在日期+1的位置
%         % zz(i)=contains(ss{i,1},'0h 0m 4s');
%     end
% end
% step 1,compress the data into 1 HZ sample rate       % sample rate=10HZ
% [s1,~]         = size(data_xl);
% tExpand=zeros(s1/10,6);
% 取原数据中给出的每隔4秒1次的数据，原数据会有误差
% for j=1:s1/10
%      if rem(j,4)==1
%         tExpand(j,:) = tse(round(j/4)+1,:);
%         t1=datetime(tExpand(j,:),'InputFormat','yyyy-MM-dd hh:mm:ss');
%         t2=t1+seconds(1);
%         % datenum_t2=datenum(t2);
%         tExpand(j+1,:)=[year(t2) month(t2) day(t2) hour(t2) minute(t2) second(t2)];
%         t3=t1+seconds(2);
%         tExpand(j+2,:)=[year(t3) month(t3) day(t3) hour(t3) minute(t3) second(t3)];
%         t4=t1+seconds(3);
%         tExpand(j+3,:)=[year(t4) month(t4) day(t4) hour(t4) minute(t4) second(t4)];
%      end
% end





% freq   = freq(1:end-1);
% plot(freq,(PSD1(:,3)));
% grid on
% title("Periodogram Using FFT");
% xlabel("Frequency (Hz)")
% ylabel("Power/Frequency (dB/Hz)")

% function timechange
% for j=1:s1/10
%      if rem(j,4)==1
%         tExpand(j,:) = t(round(j/4)+1,:);
%         t_s          = tExpand(j,end);
%         t_m          = tExpand(j,end-1);
%         t_h          = tExpand(j,end-2);
%         t_d          = tExpand(j,3);
%         t_M          = tExpand(j,2);
%         t_y          = tExpand(j,1);
%         if t_s<=56
%             % if second count less than 58, copy the first 5 collums ymdhm
%             tExpand(j+1,1:5) = tExpand(j,1:5);
%             tExpand(j+2,1:5) = tExpand(j,1:5);
%             tExpand(j+3,1:5) = tExpand(j,1:5);
%             % and add one sequencely,second +1
%             tExpand(j+1,end) = tExpand(j,end)+1;
%             tExpand(j+2,end) = tExpand(j,end)+2;
%             tExpand(j+3,end) = tExpand(j,end)+3;
%         elseif t_s==57
%              % if second count=57, copy the first 5 collums for
%              % j+1 
%             tExpand(j+1,1:5) = tExpand(j,1:5);
%             tExpand(j+1,end) = 58;
%             % for j+2/j=3 rows,the last one should be 0/1,the end-1 will
%             % increase one, and 1:4 will be the same as row j
%             % j+2
%             tExpand(j+2,1:5)   = tExpand(j,1:5);
%             tExpand(j+2,end)   = 59;
%             % j+3
%             tExpand(j+3,end)   = 0;
%             if  t_m<=58
%                 tExpand(j+3,5)     = tExpand(j,5)+1;
%                 tExpand(j+3,1:4)   = tExpand(j,1:4);
%             elseif t_m==59
%                 tExpand(j+3,5)     = 0;
%                 if t_h<23
%                     tExpand(j+3,4)   = tExpand(j,4)+1;
%                     tExpand(j+3,1:3) = tExpand(j,1:3);
%                 else
%                     tExpand(j+3,4)   = 0;
%                     tExpand(j+3,3)   = tExpand(j,3)+1;%%%这里涉及到天增加1的时候，概率较低暂不考虑
%                     tExpand(j+3,1:2) = tExpand(j,1:2);
%                 end
%             end         
%         elseif t_s==58
%             tExpand(j+1,1:5)   = tExpand(j,1:5); 
%             tExpand(j+1,end)   = t_s+1;
%             tExpand(j+2,end)   = 0;
%             tExpand(j+3,end)   = 1;
% 
%             if t_m<=58
%                 tExpand(j+2,1:4) = tExpand(j,1:4)+1;
%                 tExpand(j+3,1:4) = tExpand(j,1:4)+1;
%                 tExpand(j+2,5)   = tExpand(j,5)+1;
%                 tExpand(j+3,5)   = tExpand(j,5)+1;
%             else
%                 tExpand(j+2:j+3,5)   = 0;
%                 if t_h<23
%                     tExpand(j+2,4)   = tExpand(j,4)+1;
%                     tExpand(j+3,4)   = tExpand(j,4)+1;
%                     tExpand(j+2,1:3) = tExpand(j,1:3);
%                     tExpand(j+3,1:3) = tExpand(j,1:3);
%                 else
%                     tExpand(j+2,4)   = 0;
%                     tExpand(j+3,4)   = 0;
%                     tExpand(j+2,3)   = tExpand(j,3)+1;%%%这里涉及到天增加1的时候，概率较低暂不考虑
%                     tExpand(j+3,3)   = tExpand(j,3)+1;
%                     tExpand(j+2,1:2) = tExpand(j,1:2);
%                      tExpand(j+3,1:2)= tExpand(j,1:2);
%                 end
%             end
% 
%         elseif t_s==59
%             tExpand(j+1,6)     = 0;
%             tExpand(j+2,6)     = 1;
%             tExpand(j+3,6)     = 2;
%              if t_m<=58
%                  tExpand(j+1,5)     = tExpand(j,5)+1;
%                  tExpand(j+2,5)     = tExpand(j,5)+1;
%                  tExpand(j+3,5)     = tExpand(j,5)+1;
%                  tExpand(j+1,1:4)   = tExpand(j,1:4);
%                  tExpand(j+2,1:4)   = tExpand(j,1:4);
%                  tExpand(j+3,1:4)   = tExpand(j,1:4);
%             else
%                 tExpand(j+1:j+3,5)   = 0;
%                 if t_h<23
%                 tExpand(j+2:j+3,4)   = tExpand(j,4)+1;
%                 tExpand(j+2:j+3,1:3) = tExpand(j,1:3);
%                 else
%                     tExpand(j+1:j+3,4)   = 0;
%                     tExpand(j+1:j+3,3)   = tExpand(j,3)+1;
% 
%                 end
%             end
%         end
%      end
% end
% end
% function [s,e]=segment(t)
% 
% 
% end
